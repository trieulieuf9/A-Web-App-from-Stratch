Execise: Build a web application from scratch

Requirements:

- Makes a web server
+ coded in Python3
+ it listen to port 8080 and can be called by http://localhost:8080
- when being called by Chrome or Firefox
+ When browser opens localhost:8080/, it responses back with <h1>hello</h>, the response must be rendered as HTML.
+ When browser opens localhost:8080/plain_text, responses back with <h1>hello</h>, but this time, it is rendered as plain text
+ When browser opens localhost:8080/headers, responses back with a list of request headers
+ When browser open localhost:8080/download_file, then browser should download a file.
- Access control
+ let user signup with username & password & role (user, admin)
+ Store user data in a plain text file (similar to /etc/passwd on linux), don't need to use any SQL databases
+ let user login, then identify user with a session cookie
+ If user is User role, then access localhost:8080/admin, he will get 403 HTTP code
+ if user is Admin role, then access localhost:8080/admin, he will get 200 HTTP code and the response <h1>Hello Admin</h1>
- If you finish all the above and still want more. Tells me at trieulieuf9@proton.me

Some notes:
- To listen to a port, you can use either of these:
+ Python Socket library: https://docs.python.org/3/library/socket.html
+ use "nc" command (netcat) like a server? for example: to listen to incoming connection: "nc –L –p <port number>", we can call this command in Python3 (search "how to call terminal command in python").
- The goal of this exercise is to show you that a web application is actually very simple. From there, you can build up all the details steps by steps, according to your needs. This is to address the issue that many Software Engineering students and intern/junior programmers have, that is the overwhelming amount of tools and programming frameworks they think they "suppose" to know to learn programming. But in truth, you just need to know the basic (this exercise).
- All the requirements above are just suggestion on how you should do it, you don't need to follow exactly like that. For example, if you don't want port 8080, use whatever port you want. If you don't want to identify user with a session cookie, identify him with basic authentication or something. Just don't use the help of 3rd library. Except for programming language built-in libs.
